r'''Move a file or folder to path on server.

'''

from api.exploit import WebshellExploit, Cmdline
from api.webshell import WebshellSession, Webshell
from api import logger, utils
import argparse
import os
import re

class exploit(WebshellExploit):

    def __init__(self):
        super().__init__()
        self.parse = argparse.ArgumentParser(prog='mv')
        self.parse.add_argument('sourcepath', help="A source path on server.")
        self.parse.add_argument("targetpath", help="A target path on server.")
        self.help = __doc__ + self.parse.format_help()

    def support(self, session:WebshellSession)-> bool:
        '''判断当前命令是否支持指定的session， 一般来说session即为运行改命令时的session
        '''
        self.session = session
        return isinstance(self.session, WebshellSession) and self.session.server_info.lang in (Webshell.PHP, Webshell.ASP_NET_CS, )

    def run(self, args:Cmdline)-> int:
        args = self.parse.parse_args(args.options)
        if args.sourcepath and args.targetpath:

            result = self.evalfile('payload', pwd=self.session.state.get('pwd'), source=args.sourcepath, 
                dest=args.targetpath, f=False)
            result = result.data
            if result is None:
                logger.error("Move error!")
                return self.STOP
            
            if result == 'Dest file exists':
                if utils.input("Target file is exists, are you want to overwrite it?(y/n) ").lower() == 'y':
                    result = self.evalfile('payload', pwd=self.session.state.get('pwd'), source=args.sourcepath, 
                        dest=args.targetpath, f=True).strip()
                else:
                    return self.SUCCESS
                    
            if result == 'ok':
                logger.info(f"Move `{args.sourcepath}` to `{args.targetpath}` successfully!")
                return self.SUCCESS
            else:
                logger.error(f"Move `{args.sourcepath}` to `{args.targetpath}` failed!Check your permissions.")
                print(result)
                return self.STOP

        return self.STOP