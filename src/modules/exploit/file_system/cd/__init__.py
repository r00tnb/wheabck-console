r'''Switch to a path on server

'''

from api.exploit import WebshellExploit, Cmdline
from api.webshell import WebshellSession, Webshell
from api import logger, utils, PHPPayload
import argparse
import os
import re
import json
import base64

class exploit(WebshellExploit):

    def __init__(self):
        super().__init__()
        self.parse = argparse.ArgumentParser(prog='cd')
        self.parse.add_argument('path', help="A path on server.")
        self.help = __doc__ + self.parse.format_help()

    def support(self, session:WebshellSession)-> bool:
        '''判断当前命令是否支持指定的session， 一般来说session即为运行改命令时的session
        '''
        self.session = session
        return isinstance(self.session, WebshellSession) and self.session.server_info.lang in (Webshell.PHP, Webshell.ASP_NET_CS, )

    def run(self, args:Cmdline)-> int:
        args = self.parse.parse_args(args.options)
        if args.path:
            path = self.session.state.get('pwd')
            if path is None:
                logger.error('Current session has no pwd info.')
                return self.STOP
            if args.path in ('./', '.'):
                return self.SUCCESS

            ret = self.evalfile('payload', pwd=path, path=args.path)
            ret = ret.data
            if ret is None:
                logger.error("Switch directory error!")
                return self.STOP
            ret = json.loads(ret)
            msg = base64.b64decode(ret['msg'].encode()).decode(self.session.client.options.encoding, 'ignore')
            if ret['code'] == -1:
                if msg:
                    logger.error(msg)
                    logger.error(f"Switch to path `{args.path}` failed!")
                return self.STOP
            elif ret['code'] == 1:
                self.session.state['pwd'] = msg
            return self.SUCCESS